@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  box-sizing: border-box;
}

@layer base {
  html {
    font-family: Proxima Nova, system-ui, sans-serif;
  }
}

html,
body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow-x: hidden !important;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  scroll-behavior: smooth;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: default;
}

body::-webkit-scrollbar {
  width: 0.5em;
}

body::-webkit-scrollbar-track {
  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
}

body::-webkit-scrollbar-thumb {
  background: rgb(236, 72, 153);
  background: -moz-linear-gradient(
    180deg,
    rgba(236, 72, 153, 1) 35%,
    rgba(147, 51, 234, 1) 100%
  );
  background: -webkit-linear-gradient(
    180deg,
    rgba(236, 72, 153, 1) 35%,
    rgba(147, 51, 234, 1) 100%
  );
  background: linear-gradient(
    180deg,
    rgba(236, 72, 153, 1) 35%,
    rgba(147, 51, 234, 1) 100%
  );
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#ec4899",endColorstr="#9333ea",GradientType=1);
  border-radius: 0.5rem;
}

a:focus {
  outline: none;
}

.prose {
  width: 100%;
  max-width: 80ch;
}

#tsparticles {
  width: inherit;
  height: inherit;
  z-index: -1;
}

pre {
  -webkit-user-select: text;
  -ms-user-select: text;
  user-select: text;
}

.copied {
  cursor: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'  width='40' height='48' viewport='0 0 100 100' style='fill:black;font-size:24px;'><text y='50%'>üëç</text></svg>")
      16 0,
    auto;
}

.loading-bar {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  height: 10px;
  background-image: linear-gradient(to right, #9333ea, #ec4899);
  transform: translateX(100%);
  animation: shift-rightwards 1s ease-in-out infinite;
  animation-delay: 0.5s;
  z-index: 9999;
}

@keyframes shift-rightwards {
  0% {
    transform: translateX(-100%);
  }
  40% {
    transform: translateX(0%);
  }
  60% {
    transform: translateX(0%);
  }
  100% {
    transform: translateX(100%);
  }
}

@media only screen and (min-width: 768px) {
  .prose {
    width: 80ch;
  }
}
